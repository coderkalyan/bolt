#version 450

// TODO: make this an image
/*layout(binding = 0, std140) readonly buffer atlas_buffer {
    uint atlas[];
};*/
layout(binding = 1, rgba8) uniform writeonly image2D dest;

layout(push_constant) uniform constants {
    uvec2 size;
    uvec2 cells;
    uvec2 cell_size;
    uvec2 offset;
} terminal;

ivec4 colors[4] = ivec4[](
    ivec4(255, 0, 0, 0),
    ivec4(0, 255, 0, 0),
    ivec4(0, 0, 255, 0),
    ivec4(255, 255, 255, 0)
);

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

void main() {
    uvec2 coord = gl_GlobalInvocationID.xy;
    uvec2 dest_size = imageSize(dest);

    if (coord.x >= dest_size.x || coord.y >= dest_size.y) {
        return;
    }

    uvec2 cell = coord / terminal.cell_size;
    uvec2 offset = coord % terminal.cell_size;

    //uint pixel = atlas[97 * (terminal.cell_size.x * terminal.cell_size.y) + offset.y * terminal.cell_size.y + offset.x];
    //uint pixel = atlas[0];
    imageStore(dest, ivec2(coord), colors[(cell.x + cell.y) % 4]);
    //imageStore(dest, ivec2(coord), ivec4(pixel, pixel, pixel, 255));
}
